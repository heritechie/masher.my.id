---
type LanguageLink = {
	lang: string;
	label: string;
	href: string;
	active?: boolean;
};

type NavLink = {
	label: string;
	href: string;
	active?: boolean;
	comingSoon?: boolean;
};

const LOCALE_ICONS = {
	id: 'ID',
	en: 'EN',
} as const;

const {
	title = 'MasHer ‚Äî Software Craftsman',
	description = 'Situs pribadi MasHer. Software craftsman yang senang meracik solusi digital aman, mudah diakses, dan menyenangkan untuk siapa saja.',
	brand = 'MasHer',
	tagline = 'Software Craftsman',
	locale = 'id',
	languageLinks = [] as LanguageLink[],
	switcherLabel = 'Change language',
	themeToggleLabel = 'Toggle theme',
	navLinks = [] as NavLink[],
	navLabel = 'Primary navigation',
	mobileMenuLabel = 'Toggle navigation',
} = Astro.props;
---

<!doctype html>
<html lang={locale}>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<meta name="description" content={description} />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@600;700&family=Space+Grotesk:wght@400;500;600;700&display=swap"
			rel="stylesheet"
		/>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/remixicon@4.2.0/fonts/remixicon.css" />
		<!-- Google tag (gtag.js) -->
		<script async src="https://www.googletagmanager.com/gtag/js?id=G-3J6PEFBG7N"></script>
		<script>
			window.dataLayer = window.dataLayer || [];
			function gtag() {
				dataLayer.push(arguments);
			}
			gtag('js', new Date());
			gtag('config', 'G-3J6PEFBG7N');
		</script>
		<script is:inline>
			(() => {
				const root = document.documentElement;
				let stored = null;
				try {
					stored = localStorage.getItem('theme');
				} catch {}
				const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
				const initial = stored ?? (prefersDark ? 'dark' : 'light');
				root.dataset.theme = initial;
				root.style.colorScheme = initial;
			})();
		</script>
	</head>
	<body>
		<div class="site-shell">
			<header class="site-header">
				<a class="brand" href={`/${locale}/`} aria-label={`${brand} homepage`}>
					<span class="brand__mark">{brand}</span>
					<span class="brand__tagline">{tagline}</span>
				</a>
				{navLinks.length > 0 ? (
					<nav class="primary-nav desktop-only" aria-label={navLabel}>
						{navLinks.map((link) => (
							<a
								class={`primary-nav__link${link.active ? ' is-active' : ''}${link.comingSoon ? ' is-soon' : ''}`}
								href={link.href}
								aria-disabled={link.comingSoon ? 'true' : undefined}
								tabindex={link.comingSoon ? -1 : undefined}
							>
								{link.label}
							</a>
						))}
					</nav>
				) : null}
				<div class="header-controls">
					<button class="theme-toggle" type="button" data-theme-toggle aria-label={themeToggleLabel}>
						<i class="ri-sun-line theme-toggle__icon theme-toggle__icon--sun" aria-hidden="true"></i>
						<i class="ri-moon-line theme-toggle__icon theme-toggle__icon--moon" aria-hidden="true"></i>
					</button>
					{navLinks.length > 0 ? (
						<button class="menu-toggle mobile-only" type="button" data-menu-toggle aria-label={mobileMenuLabel} aria-expanded="false">
							<i class="ri-menu-line menu-toggle__icon menu-toggle__icon--menu" aria-hidden="true"></i>
							<i class="ri-close-line menu-toggle__icon menu-toggle__icon--close" aria-hidden="true"></i>
						</button>
					) : null}
				</div>
			</header>
			{navLinks.length > 0 ? (
				<div id="mobile-nav" class="mobile-nav mobile-only" role="dialog" aria-modal="true" aria-label={navLabel}>
					<button class="mobile-nav__close" type="button" data-menu-toggle aria-label={mobileMenuLabel}>
						<i class="ri-close-line" aria-hidden="true"></i>
					</button>
					<div class="mobile-nav__content">
						{navLinks.map((link) => {
							if (link.comingSoon) {
								return (
									<span class="mobile-nav__link is-soon" role="text">{link.label}</span>
								);
							}
							return (
								<a class="mobile-nav__link" href={link.href}>{link.label}</a>
							);
						})}
					</div>
				</div>
			) : null}
			<main id="main">
				<slot />
			</main>
			<footer>
					{languageLinks.length > 0 ? (
						<nav class="footer-language" aria-label={switcherLabel}>
							{languageLinks.map((link) => (
								<a
									class={`language-pill${link.active ? ' is-active' : ''}`}
									href={link.href}
									hreflang={link.lang}
									data-lang-option={link.lang}
									aria-current={link.active ? 'true' : undefined}
								>
									<span class="language-pill__icon" aria-hidden="true">
										{LOCALE_ICONS[link.lang as keyof typeof LOCALE_ICONS] ?? 'üåê'}
									</span>
									<span class="sr-only">{link.label}</span>
								</a>
							))}
						</nav>
					) : null}
				<p>¬© {new Date().getFullYear()} {brand}. All rights reserved.</p>
			</footer>
		</div>

		<script is:inline>
			(() => {
				const root = document.documentElement;
				const toggleTheme = (next) => {
					root.dataset.theme = next;
					root.style.colorScheme = next;
					try {
						localStorage.setItem('theme', next);
					} catch {}
					document.body.classList.add('theme-transition');
					window.setTimeout(() => document.body.classList.remove('theme-transition'), 250);
				};

				const themeButton = document.querySelector('[data-theme-toggle]');
				if (themeButton) {
					themeButton.addEventListener('click', () => {
						const current = root.dataset.theme === 'dark' ? 'dark' : 'light';
						const next = current === 'dark' ? 'light' : 'dark';
						toggleTheme(next);
					});
				}

				const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
				const syncWithSystem = (event) => {
					let stored = null;
					try {
						stored = localStorage.getItem('theme');
					} catch {}
					if (stored) return;
					toggleTheme(event.matches ? 'dark' : 'light');
				};
				if (typeof mediaQuery.addEventListener === 'function') {
					mediaQuery.addEventListener('change', syncWithSystem);
				} else if (typeof mediaQuery.addListener === 'function') {
					mediaQuery.addListener(syncWithSystem);
				}
			})();

			const links = document.querySelectorAll('[data-lang-option]');
			links.forEach((link) => {
				link.addEventListener('click', () => {
					try {
						localStorage.setItem('preferredLocale', link.dataset.langOption || '');
					} catch {}
				});
			});

			(() => {
				const triggers = document.querySelectorAll('[data-menu-toggle]');
				const mobileNav = document.querySelector('#mobile-nav');
				if (!mobileNav || triggers.length === 0) return;

				const toggleMenu = () => {
					const isOpen = mobileNav.classList.toggle('is-open');
					document.body.classList.toggle('is-menu-open', isOpen);
					triggers.forEach((trigger) => {
						if (!(trigger instanceof HTMLElement)) return;
						trigger.classList.toggle('is-open', isOpen);
						trigger.setAttribute('aria-expanded', isOpen ? 'true' : 'false');
					});
				};

				triggers.forEach((trigger) => {
					trigger.addEventListener('click', toggleMenu);
				});

				mobileNav.querySelectorAll('a').forEach((anchor) => {
					anchor.addEventListener('click', () => {
						if (mobileNav.classList.contains('is-open')) {
							toggleMenu();
						}
					});
				});

				mobileNav.addEventListener('click', (event) => {
					if (event.target === mobileNav && mobileNav.classList.contains('is-open')) {
						toggleMenu();
					}
				});
			})();
		</script>
	</body>
</html>

<style is:global>
	:root {
		color-scheme: dark light;
		font-family: 'Space Grotesk', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
		--font-display: 'Playfair Display', 'Times New Roman', serif;

		--surface: #0b0b0c;
		--surface-alt: rgba(16, 16, 18, 0.78);
		--surface-card: rgba(20, 20, 22, 0.88);
		--surface-elevated: rgba(28, 28, 30, 0.76);
		--surface-highlight: rgba(235, 235, 235, 0.08);
		--border: rgba(120, 120, 120, 0.18);
		--shadow-soft: 0 24px 40px rgba(0, 0, 0, 0.45);
		--accent: #d2d2cf;
		--accent-soft: rgba(210, 210, 207, 0.22);
		--accent-strong: #f5f5f4;
		--text-main: #f5f5f5;
		--text-muted: #9a9a9a;
		--glass-stroke: rgba(210, 210, 207, 0.18);
		--gradient-bg: radial-gradient(circle at top left, rgba(220, 220, 220, 0.08), transparent 45%),
			radial-gradient(circle at bottom right, rgba(96, 96, 96, 0.18), transparent 40%), #080808;
	}

	:root[data-theme='light'] {
		--surface: #f4f4f3;
		--surface-alt: rgba(255, 255, 255, 0.85);
		--surface-card: rgba(255, 255, 255, 0.94);
		--surface-elevated: rgba(255, 255, 255, 0.9);
		--surface-highlight: rgba(0, 0, 0, 0.06);
		--border: rgba(58, 58, 58, 0.12);
		--shadow-soft: 0 16px 32px rgba(0, 0, 0, 0.12);
		--accent: #3a3a3a;
		--accent-soft: rgba(58, 58, 58, 0.12);
		--accent-strong: #161616;
		--text-main: #1a1a1a;
		--text-muted: #5c5c5c;
		--glass-stroke: rgba(0, 0, 0, 0.08);
		--gradient-bg: radial-gradient(circle at top left, rgba(0, 0, 0, 0.06), transparent 45%),
			radial-gradient(circle at bottom right, rgba(96, 96, 96, 0.08), transparent 40%), #f4f4f3;
	}

	body.theme-transition,
	body.theme-transition * {
		transition: background-color 0.25s ease, color 0.25s ease, border-color 0.25s ease,
			box-shadow 0.25s ease;
	}

	* {
		box-sizing: border-box;
	}

	.sr-only {
		position: absolute;
		width: 1px;
		height: 1px;
		padding: 0;
		margin: -1px;
		overflow: hidden;
		clip: rect(0, 0, 0, 0);
		white-space: nowrap;
		border: 0;
	}

	body {
		margin: 0;
		min-height: 100dvh;
		background: var(--gradient-bg);
		color: var(--text-main);
		line-height: 1.7;
		transition: background 0.4s ease;
	}

	a {
		color: inherit;
		text-decoration: none;
	}

	a:focus-visible {
		outline: 2px solid var(--accent);
		outline-offset: 4px;
	}

	.desktop-only {
		display: inline-flex;
	}

	.mobile-only {
		display: none;
	}

	@media (min-width: 641px) {
		.menu-toggle {
			display: none !important;
		}
	}

	body.is-menu-open {
		overflow: hidden;
	}

	.site-shell {
		width: min(1040px, calc(100% - 48px));
		margin: 0 auto;
		padding: 48px 0 40px;
		display: flex;
		flex-direction: column;
		min-height: 100dvh;
		gap: 48px;
	}

	.site-header {
		display: flex;
		align-items: center;
		justify-content: space-between;
		gap: 20px;
		padding: 16px 20px;
		border: 1px solid var(--glass-stroke);
		border-radius: 18px;
		background: var(--surface-elevated);
		backdrop-filter: blur(24px);
		box-shadow: var(--shadow-soft);
		position: relative;
		z-index: 1101;
	}

	.brand {
		display: inline-flex;
		flex-direction: column;
		gap: 4px;
		font-weight: 700;
		letter-spacing: 0.02em;
	}

	.brand__mark {
		font-size: 1.45rem;
	}

	.brand__tagline {
		font-size: 0.9rem;
		color: var(--text-muted);
		text-transform: uppercase;
		letter-spacing: 0.14em;
	}

	.header-controls {
		display: flex;
		align-items: center;
		gap: 12px;
		margin-left: auto;
	}

	.primary-nav {
		display: inline-flex;
		align-items: center;
		gap: 10px;
		padding: 4px 8px;
		border-radius: 999px;
		background: transparent;
	}

	.primary-nav__link {
		padding: 9px 18px;
		border-radius: 999px;
		border: 1px solid transparent;
		background: transparent;
		color: var(--text-muted);
		font-size: 0.82rem;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.12em;
		transition: transform 0.2s ease, border-color 0.2s ease, background 0.2s ease, color 0.2s ease;
	}

	.primary-nav__link:hover {
		transform: translateY(-1px);
		border-color: var(--accent-soft);
		background: var(--surface-highlight);
		color: var(--text-main);
	}

	.primary-nav__link.is-active {
		background: var(--accent);
		color: var(--surface);
		border-color: transparent;
	}

	.primary-nav__link.is-soon {
		opacity: 0.6;
		cursor: default;
		pointer-events: none;
		border-style: dashed;
	}

	.menu-toggle {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		width: 40px;
		height: 40px;
		border-radius: 50%;
		border: 1px solid var(--glass-stroke);
		background: var(--surface-highlight);
		color: var(--text-muted);
		transition: border-color 0.2s ease, color 0.2s ease, background 0.2s ease, transform 0.2s ease;
	}

	.menu-toggle:hover {
		border-color: var(--accent);
		color: var(--accent-strong);
		transform: translateY(-1px);
	}

	.menu-toggle__icon {
		font-size: 1.2rem;
	}

	.menu-toggle__icon--close {
		display: none;
	}

	.menu-toggle.is-open .menu-toggle__icon--menu {
		display: none;
	}

	.menu-toggle.is-open .menu-toggle__icon--close {
		display: inline;
	}

	.mobile-nav {
		display: none;
		position: fixed;
		inset: 0;
		z-index: 1200;
		background: color-mix(in srgb, var(--surface) 92%, #000 8%);
		padding: 96px 24px 32px;
	}

	.mobile-nav.is-open {
		display: flex;
		flex-direction: column;
		gap: 28px;
	}

	.mobile-nav__close {
		position: absolute;
		top: 24px;
		right: 24px;
		width: 44px;
		height: 44px;
		border-radius: 50%;
		border: 1px solid var(--glass-stroke);
		background: var(--surface-highlight);
		color: var(--text-muted);
		display: inline-flex;
		align-items: center;
		justify-content: center;
		font-size: 1.2rem;
		transition: border-color 0.2s ease, background 0.2s ease, color 0.2s ease;
	}

	.mobile-nav__close:hover {
		border-color: var(--accent);
		color: var(--accent-strong);
	}

	.mobile-nav__content {
		display: grid;
		gap: 14px;
	}

	.mobile-nav__link {
		display: inline-flex;
		align-items: center;
		justify-content: space-between;
		padding: 14px 18px;
		border-radius: 12px;
		border: 1px solid transparent;
		background: var(--surface-highlight);
		color: var(--text-main);
		font-weight: 600;
		letter-spacing: 0.08em;
		text-transform: uppercase;
		transition: border-color 0.2s ease, background 0.2s ease, transform 0.2s ease;
	}

	.mobile-nav__link:hover {
		border-color: var(--accent);
		background: var(--surface);
		transform: translateY(-1px);
	}

	.mobile-nav__link.is-soon {
		opacity: 0.6;
		border-style: dashed;
		cursor: default;
		pointer-events: none;
	}

	.theme-toggle {
		cursor: pointer;
		border: 1px solid var(--glass-stroke);
		border-radius: 999px;
		background: var(--surface-highlight);
		color: var(--text-muted);
		padding: 6px 10px;
		display: inline-flex;
		align-items: center;
		gap: 6px;
		font-size: 0.9rem;
		transition: border-color 0.2s ease, color 0.2s ease, background 0.2s ease, transform 0.2s ease;
	}

	.theme-toggle:hover {
		color: var(--text-main);
		border-color: var(--accent);
		transform: translateY(-1px);
	}

	.footer-language {
		display: flex;
		justify-content: center;
		gap: 10px;
		margin: 0 0 18px;
	}

	.language-pill {
		position: relative;
		display: inline-flex;
		align-items: center;
		justify-content: center;
		width: 42px;
		height: 42px;
		border-radius: 50%;
		border: 1px solid var(--glass-stroke);
		background: var(--surface-highlight);
		color: var(--text-muted);
		transition: transform 0.2s ease, border-color 0.2s ease, background 0.2s ease, color 0.2s ease,
			box-shadow 0.2s ease;
	}

	.language-pill:hover {
		transform: translateY(-1px);
		border-color: var(--accent);
		color: var(--accent-strong);
	}

	.language-pill.is-active {
		background: var(--accent);
		border-color: transparent;
		color: var(--surface);
		box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
	}

	.language-pill__icon {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		width: 100%;
		font-size: 0.85rem;
		font-weight: 700;
		letter-spacing: 0.08em;
		line-height: 1;
	}

	.theme-toggle__icon {
		font-size: 1.15rem;
		position: relative;
	}

	:root[data-theme='light'] .theme-toggle__icon--sun {
		display: none;
	}

	:root[data-theme='dark'] .theme-toggle__icon--moon {
		display: none;
	}

	main {
		flex: 1 0 auto;
		display: flex;
		flex-direction: column;
		gap: 88px;
	}

	footer {
		flex: 0 0 auto;
		border-top: 1px solid var(--glass-stroke);
		padding-top: 20px;
		font-size: 14px;
		color: var(--text-muted);
		text-align: center;
	}

	@media (max-width: 840px) {
		.site-shell {
			width: min(1040px, calc(100% - 40px));
			padding-top: 36px;
		}

		main {
			gap: 72px;
		}
	}

	@media (max-width: 640px) {
		.site-shell {
			width: min(1040px, calc(100% - 32px));
			gap: 36px;
		}

		.site-header {
			flex-direction: row;
			align-items: center;
			padding: 14px 16px;
			gap: 12px;
		}

		.brand {
			align-items: flex-start;
			flex: 1 1 auto;
		}

		.header-controls {
			margin-left: 0;
			gap: 10px;
		}

		.desktop-only {
			display: none !important;
		}

		.menu-toggle.mobile-only {
			display: inline-flex;
		}

		.mobile-nav.mobile-only {
			display: none;
		}

		.mobile-nav.is-open {
			display: flex;
		}
	}

	@media (max-width: 420px) {
		main {
			gap: 60px;
		}
	}
</style>
