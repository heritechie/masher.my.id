---
import Layout from '../../layouts/Layout.astro';
import { defaultLocale, SUPPORTED_LOCALES, translations, type Locale } from '../../i18n/translations';

export function getStaticPaths() {
	return SUPPORTED_LOCALES.map((lang) => ({
		params: { lang },
	}));
}

const requestedLang = Astro.params.lang;
const locale: Locale = SUPPORTED_LOCALES.includes(requestedLang as Locale) ? (requestedLang as Locale) : defaultLocale;
const t = translations[locale];

const languageLinks = SUPPORTED_LOCALES.map((code) => ({
	lang: code,
	label: t.layout.languageNames[code],
	href: `/${code}/learning-journey/`,
	active: code === locale,
}));

const navLinks = [
	{
		label: t.layout.learningJourneyLabel,
		href: `/${locale}/learning-journey/`,
		active: true,
	},
	{
		label: t.layout.knowledgeBaseLabel,
		href: `/${locale}/knowledge-base/`,
		active: false,
	},
	{
		label: t.layout.webtoolsLabel,
		href: `/${locale}/webtools/`,
		active: false,
	},
];

const entries = t.learningJourney.articles;
---

<Layout
	title={t.learningJourney.meta.title}
	description={t.learningJourney.meta.description}
	brand={t.layout.brand}
	tagline={t.layout.tagline}
	locale={locale}
	languageLinks={languageLinks}
	navLinks={navLinks}
	navLabel={t.layout.primaryNavLabel}
	mobileMenuLabel={t.layout.mobileMenuLabel}
	switcherLabel={t.layout.languageSwitcherLabel}
	themeToggleLabel={t.layout.themeToggleLabel}
>
	<section class="journey-hero">
		<header class="journey-hero__content">
			<span class="journey-hero__eyebrow">
				<i class="ri-compass-discover-line" aria-hidden="true"></i>
				{t.learningJourney.title}
			</span>
			<h1>{t.learningJourney.title}</h1>
			<p class="journey-hero__intro">{t.learningJourney.intro}</p>
		</header>
		<a class="journey-hero__back" href={`/${locale}/`}>
			<i class="ri-arrow-go-back-line" aria-hidden="true"></i>
			{t.learningJourney.backLabel}
		</a>
	</section>

	<section class="journey-timeline" aria-label={t.learningJourney.timelineLabel}>
		<div class="journey-timeline__header">
			<h2>
				<i class="ri-road-map-line" aria-hidden="true"></i>
				{t.learningJourney.timelineLabel}
			</h2>
			<p>{t.learningJourney.meta.description}</p>
		</div>

		<div class="journey-grid">
			{entries.map((entry) => {
				const hasLink = Boolean(entry.link);
				const href = entry.link ?? undefined;
				const isExternal = hasLink && typeof href === 'string' && href.startsWith('http');
				return (
					<article class="journey-card">
						<span class="journey-card__year">{entry.year}</span>
						<h3>{entry.title}</h3>
						<p class="journey-card__summary">{entry.summary}</p>
						<ul class="journey-card__topics">
							{entry.topics.map((topic) => (
								<li>{topic}</li>
							))}
						</ul>
						{hasLink && href ? (
							<a
								class="journey-card__cta"
								href={href}
								target={isExternal ? '_blank' : undefined}
								rel={isExternal ? 'noopener noreferrer' : undefined}
							>
								<span>{t.learningJourney.readLabel}</span>
								<i class="ri-arrow-right-up-line" aria-hidden="true"></i>
							</a>
						) : (
							<span class="journey-card__placeholder">
								<i class="ri-hourglass-line" aria-hidden="true"></i>
								{t.learningJourney.upcomingLabel}
							</span>
						)}
					</article>
				);
			})}
		</div>
	</section>
</Layout>

<style>
	.journey-hero {
		display: grid;
		gap: 20px;
		padding: 36px;
		border-radius: 28px;
		background:
			linear-gradient(160deg, rgba(210, 210, 207, 0.18), transparent 65%),
			var(--surface-card);
		border: 1px solid var(--glass-stroke);
		box-shadow: var(--shadow-soft);
		backdrop-filter: blur(22px);
	}

	.journey-hero__content {
		display: grid;
		gap: 18px;
	}

	.journey-hero__eyebrow {
		display: inline-flex;
		align-items: center;
		gap: 8px;
		padding: 6px 14px;
		border-radius: 999px;
		border: 1px solid var(--glass-stroke);
		background: var(--surface-highlight);
		color: var(--text-muted);
		font-size: 0.82rem;
		text-transform: uppercase;
		letter-spacing: 0.14em;
	}

	h1 {
		margin: 0;
		font-size: clamp(2.2rem, 5vw, 3.2rem);
	}

	.journey-hero__intro {
		margin: 0;
		color: var(--text-muted);
		font-size: 1.08rem;
		max-width: 70ch;
	}

	.journey-hero__back {
		display: inline-flex;
		align-items: center;
		justify-content: flex-start;
		gap: 8px;
		padding: 10px 18px;
		border-radius: 999px;
		color: var(--accent);
		font-weight: 600;
		font-size: 0.92rem;
		letter-spacing: 0.04em;
		position: relative;
		width: fit-content;
		transition: transform 0.2s ease, color 0.2s ease;
	}

	.journey-hero__back:hover {
		transform: translateX(-4px);
		color: var(--accent-strong);
	}

	.journey-timeline {
		display: grid;
		gap: 24px;
	}

	.journey-timeline__header {
		display: grid;
		gap: 12px;
	}

	.journey-timeline__header h2 {
		display: inline-flex;
		align-items: center;
		gap: 10px;
		margin: 0;
		font-size: clamp(1.8rem, 3.5vw, 2.4rem);
	}

	.journey-timeline__header p {
		margin: 0;
		color: var(--text-muted);
		max-width: 65ch;
	}

	.journey-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
		gap: 18px;
	}

	.journey-card {
		display: grid;
		gap: 16px;
		padding: 24px;
		border-radius: 24px;
		background: var(--surface-card);
		border: 1px solid var(--glass-stroke);
		box-shadow: var(--shadow-soft);
		backdrop-filter: blur(18px);
		position: relative;
		overflow: hidden;
	}

	.journey-card::after {
		content: '';
		position: absolute;
		inset: 0;
		background: linear-gradient(145deg, rgba(255, 255, 255, 0.06), transparent 60%);
		pointer-events: none;
	}

	.journey-card > * {
		position: relative;
	}

	.journey-card__year {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		width: fit-content;
		padding: 6px 14px;
		border-radius: 999px;
		background: var(--surface-highlight);
		border: 1px solid var(--glass-stroke);
		font-size: 0.78rem;
		letter-spacing: 0.16em;
		text-transform: uppercase;
		color: var(--text-muted);
	}

	.journey-card h3 {
		margin: 0;
		font-size: 1.2rem;
	}

	.journey-card__summary {
		margin: 0;
		color: var(--text-muted);
		line-height: 1.6;
	}

	.journey-card__topics {
		display: inline-flex;
		flex-wrap: wrap;
		gap: 8px;
		margin: 0;
		padding: 0;
		list-style: none;
	}

	.journey-card__topics li {
		padding: 6px 12px;
		border-radius: 999px;
		background: var(--surface-highlight);
		border: 1px solid var(--glass-stroke);
		font-size: 0.78rem;
		letter-spacing: 0.08em;
		text-transform: uppercase;
		color: var(--text-muted);
	}

	.journey-card__cta {
		display: inline-flex;
		align-items: center;
		gap: 8px;
		align-self: flex-start;
		padding: 10px 18px;
		border-radius: 999px;
		border: 1px solid var(--accent-soft);
		color: var(--accent);
		text-decoration: none;
		font-weight: 600;
		letter-spacing: 0.06em;
		transition: transform 0.2s ease, border-color 0.2s ease, background 0.2s ease, color 0.2s ease;
	}

	.journey-card__cta:hover {
		transform: translateY(-2px);
		border-color: var(--accent);
		background: var(--surface-highlight);
		color: var(--accent-strong);
	}

	.journey-card__placeholder {
		display: inline-flex;
		align-items: center;
		gap: 8px;
		padding: 10px 18px;
		border-radius: 999px;
		border: 1px dashed var(--glass-stroke);
		color: var(--text-muted);
		font-weight: 600;
		letter-spacing: 0.06em;
	}

	@media (max-width: 720px) {
		.journey-hero {
			padding: 28px;
		}

		.journey-grid {
			grid-template-columns: 1fr;
		}
	}

	@media (max-width: 520px) {
		.journey-hero {
			padding: 24px;
		}

		.journey-card {
			padding: 22px;
		}

		.journey-card__cta,
		.journey-card__placeholder {
			width: 100%;
			justify-content: center;
		}
	}
</style>
