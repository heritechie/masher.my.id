---
import Layout from '../../layouts/Layout.astro';
import profileImage from '../../assets/me_juni_ito_style.png';
import { defaultLocale, SUPPORTED_LOCALES, translations, type Locale } from '../../i18n/translations';

export function getStaticPaths() {
	return SUPPORTED_LOCALES.map((lang) => ({
		params: { lang },
	}));
}

const iconMap = {
	status: 'ri-briefcase-smile-line',
	highlight: 'ri-sparkling-line',
	experience: 'ri-award-line',
	stack: 'ri-tools-line',
	contact: 'ri-hand-heart-line',
	mail: 'ri-mail-send-line',
	github: 'ri-github-line',
	linkedin: 'ri-linkedin-line',
	frontend: 'ri-brush-line',
	backend: 'ri-database-2-line',
	practice: 'ri-shield-keyhole-line',
	badge: 'ri-compass-3-line',
} as const;

const requestedLang = Astro.params.lang;
const locale: Locale = SUPPORTED_LOCALES.includes(requestedLang as Locale) ? (requestedLang as Locale) : defaultLocale;
const t = translations[locale];

const languageLinks = SUPPORTED_LOCALES.map((code) => ({
	lang: code,
	label: translations[locale].layout.languageNames[code],
	href: `/${code}/`,
	active: code === locale,
}));

const contactChannels = [
	{ key: 'email', label: t.contact.channels.email, value: 'heritechie@gmail.com', href: 'mailto:heritechie@gmail.com', icon: iconMap.mail },
	{ key: 'github', label: t.contact.channels.github, value: 'github.com/heritechie', href: 'https://github.com/heritechie', icon: iconMap.github },
	{
		key: 'linkedin',
		label: t.contact.channels.linkedin,
		value: 'linkedin.com/in/heritechie',
		href: 'https://linkedin.com/in/heritechie',
		icon: iconMap.linkedin,
	},
] as const;

const deliverables = t.deliverables.items;
---

<Layout
	title={t.meta.title}
	description={t.meta.description}
	brand={t.layout.brand}
	tagline={t.layout.tagline}
	locale={locale}
	languageLinks={languageLinks}
	switcherLabel={t.layout.languageSwitcherLabel}
	skipLinkLabel={t.layout.skipLinkLabel}
	themeToggleLabel={t.layout.themeToggleLabel}
>
	<section class="hero">
		<div class="hero__content">
			<div class="hero__meta">
				<span class="hero__status">
					<span class="icon" aria-hidden="true"><i class={`ri ${iconMap.status}`}></i></span>
					{t.hero.status}
				</span>
				<h1>{t.hero.name}</h1>
				<p class="hero__subtitle">{t.hero.subtitle}</p>
			</div>

			<div class="hero__summary">
				<p>{t.hero.intro}</p>

				<ul class="hero__highlights">
					{t.hero.highlights.map((item) => (
						<li>
							<span class="icon" aria-hidden="true"><i class={`ri ${iconMap.highlight}`}></i></span>
							<span>{item}</span>
						</li>
					))}
				</ul>

				<div class="hero__cta">
					<a class="button" href="mailto:heritechie@gmail.com">{t.hero.ctaPrimary}</a>
					<a class="button secondary" href="https://github.com/heritechie" target="_blank" rel="noopener">
						{t.hero.ctaSecondary}
					</a>
				</div>
			</div>
		</div>

		<aside class="hero__portrait">
			<div class="hero__portrait-frame">
				<img src={profileImage.src} alt={t.hero.portraitAlt} loading="lazy" width="340" height="420" />
			</div>
			<div class="hero__badge">
				<span class="icon" aria-hidden="true"><i class={`ri ${iconMap.badge}`}></i></span>
				<span>{t.hero.badge}</span>
			</div>
		</aside>
	</section>

	<section class="experience" id="experience">
		<h2 class="section-title">
			<span class="icon" aria-hidden="true"><i class={`ri ${iconMap.experience}`}></i></span>
			{t.experience.title}
		</h2>
		<p>{t.experience.body}</p>
	</section>

	<section class="deliverables" id="deliverables">
		<div class="deliverables__header">
			<h2 class="section-title">
				<span class="icon" aria-hidden="true"><i class="ri-rocket-2-line"></i></span>
				{t.deliverables.title}
			</h2>
			<p>{t.deliverables.intro}</p>
		</div>
		<div class="deliverables__grid">
			{deliverables.map((item) => (
				<article class="deliverable-card">
					<span class="icon deliverable-card__icon" aria-hidden="true"><i class={`ri ${item.icon}`}></i></span>
					<h3>{item.title}</h3>
					<p>{item.description}</p>
				</article>
			))}
		</div>
	</section>

	<section class="stack" id="toolkit">
		<h2 class="section-title">
			<span class="icon" aria-hidden="true"><i class={`ri ${iconMap.stack}`}></i></span>
			{t.stack.title}
		</h2>
		<p>{t.stack.intro}</p>
		<div class="stack__grid">
			{t.stack.categories.map((category, index) => {
				const icon =
					index === 0 ? iconMap.frontend : index === 1 ? iconMap.backend : iconMap.practice;
				return (
					<article class="stack-card">
						<span class="stack-card__icon icon" aria-hidden="true"><i class={`ri ${icon}`}></i></span>
						<h3>{category.title}</h3>
						<ul>
							{category.items.map((item) => (
								<li>{item}</li>
							))}
						</ul>
					</article>
				);
			})}
		</div>
	</section>

	<section class="contact" id="contact">
		<h2 class="section-title">
			<span class="icon" aria-hidden="true"><i class={`ri ${iconMap.contact}`}></i></span>
			{t.contact.title}
		</h2>
		<p>{t.contact.intro}</p>
		<div class="contact__grid">
			{contactChannels.map((channel) => (
				<a
					class="contact-card"
					href={channel.href}
					target={channel.href.startsWith('http') ? '_blank' : undefined}
					rel="noopener"
				>
					<span class="icon contact-card__icon" aria-hidden="true"><i class={`ri ${channel.icon}`}></i></span>
					<span class="label">{channel.label}</span>
					<span class="value">{channel.value}</span>
				</a>
			))}
		</div>
	</section>

	<section class="disclaimer" aria-live="polite">
		<div class="disclaimer__card">
			<span class="icon disclaimer__icon" aria-hidden="true"><i class="ri ri-sparkling-2-line"></i></span>
			<p>{t.footerNotice}</p>
		</div>
	</section>
</Layout>

<style>
	.hero {
		display: grid;
		gap: 32px;
	}

	.hero__content {
		display: grid;
		gap: 24px;
	}

	.hero__meta {
		display: grid;
		gap: 16px;
	}

	.hero__status {
		display: inline-flex;
		align-items: center;
		gap: 10px;
		padding: 9px 16px;
		border-radius: 999px;
		background: var(--surface-highlight);
		border: 1px solid var(--glass-stroke);
		color: var(--accent-strong);
		font-size: 13px;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.08em;
		backdrop-filter: blur(16px);
	}

	h1 {
		font-size: clamp(2.5rem, 5vw, 3.5rem);
		margin: 0;
		font-weight: 700;
	}

	.hero__subtitle {
		margin: 0;
		font-size: 1.15rem;
		color: var(--text-muted);
		max-width: 34ch;
	}

	.hero__summary {
		display: grid;
		gap: 22px;
		padding: 30px;
		border-radius: 26px;
		background:
			linear-gradient(135deg, rgba(210, 210, 207, 0.16), transparent 65%),
			var(--surface-card);
		border: 1px solid var(--glass-stroke);
		box-shadow: var(--shadow-soft);
		backdrop-filter: blur(24px);
	}

	.hero__summary p {
		margin: 0;
		font-size: 1.02rem;
		color: var(--text-main);
	}

	.hero__highlights {
		margin: 0;
		padding: 0;
		list-style: none;
		display: grid;
		gap: 14px;
	}

	.hero__highlights li {
		display: grid;
		grid-template-columns: auto 1fr;
		align-items: start;
		gap: 12px;
		color: var(--text-muted);
		padding: 10px 0;
		border-bottom: 1px solid color-mix(in srgb, var(--text-muted) 35%, transparent);
	}

	.hero__highlights li:last-child {
		border-bottom: none;
		padding-bottom: 0;
	}

	.hero__cta {
		display: flex;
		flex-wrap: wrap;
		gap: 12px;
	}

	.button {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		padding: 12px 22px;
		border-radius: 999px;
		background: var(--accent);
		color: #fff;
		font-weight: 600;
		transition: transform 0.2s ease, box-shadow 0.2s ease;
		box-shadow: 0 18px 36px rgba(0, 0, 0, 0.28);
	}

	.button:hover {
		transform: translateY(-2px);
		box-shadow: 0 22px 44px rgba(0, 0, 0, 0.36);
	}

	.button.secondary {
		background: transparent;
		color: var(--accent);
		border: 1px solid var(--accent-soft);
		box-shadow: inset 0 0 0 1px color-mix(in srgb, var(--accent) 20%, transparent);
	}

	.button.secondary:hover {
		border-color: var(--accent);
		color: var(--text-main);
		background: var(--surface-highlight);
	}

	.hero__portrait {
		display: grid;
		gap: 16px;
		align-content: start;
		justify-items: center;
	}

	.hero__portrait-frame {
		position: relative;
		border-radius: 28px;
		overflow: hidden;
		border: 1px solid var(--glass-stroke);
		box-shadow: 0 24px 48px rgba(0, 0, 0, 0.5);
		width: min(100%, 352px);
	}

	.hero__portrait-frame::after {
		content: '';
		position: absolute;
		inset: 0;
		background: linear-gradient(200deg, rgba(255, 255, 255, 0.1), transparent 55%);
	}

	.hero__portrait img {
		display: block;
		width: 100%;
		height: auto;
		object-fit: cover;
	}

	.hero__badge {
		display: inline-flex;
		align-items: center;
		gap: 10px;
		padding: 11px 16px;
		border-radius: 18px;
		background: var(--surface-highlight);
		border: 1px solid var(--glass-stroke);
		color: var(--text-muted);
		font-size: 0.9rem;
		backdrop-filter: blur(18px);
		text-align: center;
	}

	.section-title {
		display: inline-flex;
		align-items: center;
		gap: 12px;
		margin: 0 0 12px;
		font-size: clamp(1.8rem, 3vw, 2.3rem);
	}

	.experience,
	.deliverables,
	.stack,
	.contact {
		display: grid;
		gap: 16px;
	}

	.experience p,
	.stack p,
	.contact p {
		margin: 0;
		color: var(--text-muted);
		max-width: 60ch;
	}

	.stack__grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
		gap: 16px;
	}

	.stack-card {
		background: var(--surface-card);
		border: 1px solid var(--glass-stroke);
		border-radius: 22px;
		padding: 22px;
		display: grid;
		gap: 14px;
		box-shadow: var(--shadow-soft);
		backdrop-filter: blur(18px);
	}

	.stack-card h3 {
		margin: 0;
		font-size: 1.1rem;
	}

	.stack-card ul {
		margin: 0;
		list-style: none;
		padding: 0;
		display: grid;
		gap: 8px;
		color: var(--text-muted);
		font-size: 0.95rem;
	}

	.contact__grid {
		display: grid;
		gap: 12px;
		grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
	}

	.contact-card {
		background:
			linear-gradient(130deg, rgba(210, 210, 207, 0.12), transparent 70%),
			var(--surface-card);
		border: 1px solid var(--glass-stroke);
		border-radius: 20px;
		padding: 20px;
		display: grid;
		gap: 8px;
		transition: border-color 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;
		color: inherit;
		box-shadow: var(--shadow-soft);
	}

	.contact-card:hover {
		border-color: var(--accent);
		transform: translateY(-3px);
		box-shadow: 0 24px 48px rgba(0, 0, 0, 0.38);
	}

	.contact-card .label {
		font-size: 0.8rem;
		text-transform: uppercase;
		letter-spacing: 0.14em;
		color: var(--text-muted);
	}

	.contact-card .value {
		font-size: 1rem;
		font-weight: 600;
		word-break: break-word;
	}

	.icon {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		line-height: 1;
		color: var(--accent);
	}

	.icon i {
		font-size: 1.1rem;
	}

	.hero__status .icon i {
		font-size: 1rem;
	}

	.hero__highlights .icon i {
		font-size: 1.2rem;
	}

	.stack-card__icon {
		font-size: 1.5rem;
	}

	.stack-card__icon i {
		font-size: inherit;
	}

	.contact-card__icon i {
		font-size: 1.4rem;
	}

	.deliverables__header p {
		margin: 0;
		color: var(--text-muted);
		max-width: 64ch;
	}

	.deliverables__grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
		gap: 16px;
	}

	.deliverable-card {
		background: var(--surface-card);
		border: 1px solid var(--glass-stroke);
		border-radius: 20px;
		padding: 20px;
		display: grid;
		gap: 12px;
		box-shadow: var(--shadow-soft);
		backdrop-filter: blur(16px);
	}

	.deliverable-card h3 {
		margin: 0;
		font-size: 1.1rem;
	}

	.deliverable-card p {
		margin: 0;
		color: var(--text-muted);
	}

	.deliverable-card__icon {
		font-size: 1.35rem;
	}

	.disclaimer {
		display: flex;
		justify-content: center;
	}

	.disclaimer__card {
		display: inline-flex;
		align-items: center;
		gap: 12px;
		padding: 14px 20px;
		border-radius: 999px;
		border: 1px solid var(--glass-stroke);
		background: var(--surface-highlight);
		color: var(--text-muted);
		font-size: 0.92rem;
		backdrop-filter: blur(14px);
	}

	.disclaimer__icon {
		color: var(--accent);
		font-size: 1.1rem;
	}

	@media (min-width: 960px) {
		.hero {
			grid-template-columns: minmax(0, 1.2fr) minmax(260px, 0.8fr);
			align-items: start;
		}

		.hero__portrait {
			justify-items: stretch;
			text-align: left;
		}
	}

	@media (max-width: 720px) {
		.hero__summary {
			padding: 26px;
		}

		.hero__subtitle {
			max-width: unset;
		}
	}

	@media (max-width: 600px) {
		.hero {
			gap: 24px;
		}

		.hero__content {
			gap: 20px;
		}

		.hero__status {
			width: 100%;
			justify-content: center;
			font-size: 12px;
			letter-spacing: 0.06em;
		}

		.hero__summary {
			padding: 22px;
		}

		.hero__cta {
			width: 100%;
			flex-direction: column;
		}

		.hero__cta .button {
			width: 100%;
		}

		.stack__grid {
			grid-template-columns: 1fr;
			gap: 14px;
		}

		.stack-card {
			padding: 20px;
		}

		.contact__grid {
			grid-template-columns: 1fr;
			gap: 14px;
		}

		.contact-card {
			padding: 18px;
		}
	}

	@media (max-width: 520px) {
		.hero__highlights {
			gap: 12px;
		}

		.hero__highlights li {
			gap: 10px;
		}

		.hero__badge {
			width: 100%;
			justify-content: center;
			flex-wrap: wrap;
			row-gap: 6px;
		}
	}

	@media (max-width: 420px) {
		h1 {
			font-size: clamp(2.2rem, 10vw, 2.5rem);
		}

		.section-title {
			font-size: clamp(1.6rem, 7vw, 1.9rem);
		}

		.hero__subtitle {
			font-size: 1.05rem;
		}
	}
</style>
